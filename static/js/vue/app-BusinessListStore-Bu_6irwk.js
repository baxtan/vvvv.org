import{aa as i,bm as f}from"./app.js";import{l as h}from"./app-LinksHelper-C0DPfYCg.js";const m={user:{url:`${i.GET_USERS}?fields=username,related.social.{SOCIAL}&filter[related][social][{SOCIAL}][_nempty]=true&sort=username`,itemPath:"related.social"},company:{url:`${i.GET_COMPANIES}?fields=name,slug,social.{SOCIAL}&filter[social][{SOCIAL}][_nempty]=true&sort=name`,itemPath:"social"},edu:{url:`${i.GET_EDUS}?fields=name,slug,social.{SOCIAL}&filter[social][{SOCIAL}][_nempty]=true&sort=name`,itemPath:"social"}};async function d(t,e){const s=m[t],n=s?.url.replaceAll("{SOCIAL}",e);if(!n)throw new Error("Can't fetch Social");const c=await fetch(n);if(c.ok){const r=await c.json();return{items:r.data.map(o=>{const u=h(e,o[s.itemPath][e]);return{name:o.username||o.name,label:u.text,connectionLink:u.url,slug:o.slug}}),total:r.meta?.filter_count??0}}else throw Error("Connection Error")}const y=i.BASEURL+"items/Company?fields=*&sort=name&meta=filter_count",S="withoutEnlargement=true&fit=inside&height=120&quality=90&format=png",p=f("businessList",{state:()=>({list:{},selectedSection:a[0],selectedConnection:l[0],sections:a,socialOptions:l,loading:!1}),actions:{async setSection(t,e){this.selectedSection=a.find(s=>s.key==t)??a[0],e&&(this.selectedConnection=l.find(s=>s.key==e)||l[0])},async getData(){this.selectedSection.key=="list"?await this.getList(!0):this.selectedSection.key=="connections"&&await this.getConnections(!0)},async getList(t=!1){if(!(this.list.list&&!t)){this.loading=!0;try{this.list.list=await k()}catch{this.fetched=!1}finally{this.loading=!1}}},async getConnections(t=!1){if(!(this.list.connections&&!t)){this.loading=!0;try{const e=await d("company",this.selectedConnection.key);e.items.forEach(s=>{s.profileLink="/business/"+s.slug,s.key="business"}),this.list.connections=e}catch(e){console.log(e)}finally{this.loading=!1}}}}}),a=[{label:"List",key:"list",content:"List"},{label:"Connections",key:"connections",content:"Social"}],l=[{label:"GitHub",key:"github"},{label:"NuGet",key:"nuget"},{label:"Mastodon",key:"mastodon"},{label:"Pixelfed",key:"pixelfed"},{label:"LinkedIn",key:"linkedin"},{label:"YouTube",key:"youtube"},{label:"PeerTube",key:"peertube"}];function g(t){return t?`${i.ASSETS}${t}?${S}`:null}async function k(){const t=await fetch(y);if(t.ok){const e=await t.json(),s=e.data;return s.forEach(n=>{n.logo=g(n.logo)}),{items:s,total:e.meta?.filter_count??0}}else throw Error("Connection Error")}export{p as u};
